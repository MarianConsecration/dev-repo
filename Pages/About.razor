@page "/about"
@inject IJSRuntime JSRuntime

<PageTitle>About</PageTitle>

<div class="page-content">
    <h1 class="page-title">About</h1>
    <p>This is Saint Louis-Marie de Montfort's Total Consecration to Jesus Through Mary for 2025 ending on the Assumption of the Blessed Virgin Mary.</p>

    <div class="settings-toggles mt-4">
        <h5 class="page-settings-title">Current Page Settings (Toggle to Change)</h5>
        <div class="toggle-group my-2">
            <label class="me-2">Theme:</label>
            <ThemeToggle />
        </div>
        <div class="toggle-group my-2">
            <label class="me-2">Language:</label>
            <LanguageToggle @bind-UseTraditional="useTraditional" />
        </div>
        <div class="toggle-group my-2">
            <label class="me-2">View Mode:</label>
            <HandToggle />
        </div>
    </div>
</div>

@code {
    private bool useTraditional = false; // This will be bound to LanguageToggle

    // If you need to react to language changes specifically on this page,
    // you can use the 'useTraditional' field.
    // The LanguageToggle component itself handles persistence to localStorage.

    protected override async Task OnInitializedAsync()
    {
        // Initialize useTraditional from localStorage if LanguageToggle doesn't handle it early enough for this page's own logic
        // However, LanguageToggle's internal OnAfterRenderAsync will also set its state and call UseTraditionalChanged.
        // For simplicity, relying on the component's own initialization might be enough.
        var langPref = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "languagePreference");
        if (langPref != null)
        {
            useTraditional = langPref == "traditional";
        }
    }
}
