<div class="nav-bar">
    <button class="nav-toggle" @onclick="ToggleNavMenu">
        <RadzenIcon Icon="@(isOpen ? "close" : "menu")" />
    </button>
</div>

<RadzenCard class="@GetNavMenuClass()">
    <div class="nav-items-container">
        <div class="nav-item" @onclick='() => NavigateTo("")'>
            <RadzenIcon Icon="home" class="nav-icon" />
            <span class="nav-text">Home</span>
        </div>
        <div class="nav-item" @onclick='() => NavigateTo("preparation")'>
            <RadzenIcon Icon="event_note" class="nav-icon" />
            <span class="nav-text">12 Day Preparation</span>
        </div>
        <div class="nav-item" @onclick='() => NavigateTo("firstweek")'>
            <RadzenIcon Icon="filter_1" class="nav-icon" />
            <span class="nav-text">First Week</span>
        </div>
        <div class="nav-item" @onclick='() => NavigateTo("secondweek")'>
            <RadzenIcon Icon="filter_2" class="nav-icon" />
            <span class="nav-text">Second Week</span>
        </div>
        <div class="nav-item" @onclick='() => NavigateTo("thirdweek")'>
            <RadzenIcon Icon="filter_3" class="nav-icon" />
            <span class="nav-text">Third Week</span>
        </div>
        <div class="nav-item" @onclick='() => NavigateTo("about")'>
            <RadzenIcon Icon="info" class="nav-icon" />
            <span class="nav-text">About</span>
        </div>
    </div>
</RadzenCard>

@code {
    private bool isOpen = false;
    [Inject] private NavigationManager Navigation { get; set; }

    private string GetNavMenuClass() => $"nav-menu {(isOpen ? "open" : "")}";

    private void ToggleNavMenu()
    {
        isOpen = !isOpen;
    }

    private void NavigateTo(string route)
    {
        Navigation.NavigateTo(route);

    }
}